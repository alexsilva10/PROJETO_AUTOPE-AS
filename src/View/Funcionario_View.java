/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.Funcionario_Dao;
import Model.Funcionario_Model;
import Util.ValidaCPF;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALEX DIAS
 */
public class Funcionario_View extends javax.swing.JInternalFrame {
    
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
    Funcionario_Model funcionario;
    Funcionario_Dao funci_Dao;
    
    List<Funcionario_Model> funcionarios;
    DefaultTableModel modelo = new DefaultTableModel();
    String cpf = "";
    String cpf2;
    String user = "";
    String user2;
    
    public Funcionario_View() {
        funci_Dao = new Funcionario_Dao();
         
        initComponents();
        this.setVisible(true);
        Campos(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
                false,false, false, false, false, false, false, false, false,false);
        
        Campos_Botão(true, false, false, false, false,true,false);
        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TxtNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TxtDatanascimento = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        TxtSexo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        TxtCPF = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        TxtTelefone = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        TxtCelular = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        TxtEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TxtEstadocivil = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        TxtMatricula = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        TxtBairro = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        TxtRua = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TxtNumero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TxtCidade = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        TxtEstado = new javax.swing.JTextField();
        TxtComplemento = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        TxtCep = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        TxtEscolaridade = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        TxtRG = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        TxtDatademissao = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        TxtSalarioatual = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        TxtDataadmissao = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        TxtSalarioadmissao = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        TxtStatus = new javax.swing.JComboBox<>();
        TxtCargo = new javax.swing.JComboBox<>();
        TxtID = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        Btn_Pesquisar = new javax.swing.JButton();
        Btn_Novo = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        Btn_Alterar = new javax.swing.JButton();
        Btn_Limpar = new javax.swing.JButton();
        Btn_Excluir = new javax.swing.JButton();
        Btn_Cancelar = new javax.swing.JButton();
        Btn_Salvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela_Funcionario = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setTitle("Cadastro de Funcionário");
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(82, 203, 248));
        jPanel2.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(82, 203, 248));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Pessoais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Small", 1, 11))); // NOI18N
        jPanel3.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel2.setText(" Nome: ");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(10, 20, 50, 20);
        jPanel3.add(TxtNome);
        TxtNome.setBounds(60, 20, 640, 20);

        jLabel5.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel5.setText("Dt de Nasc:");
        jPanel3.add(jLabel5);
        jLabel5.setBounds(260, 50, 70, 20);

        try {
            TxtDatanascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel3.add(TxtDatanascimento);
        TxtDatanascimento.setBounds(330, 50, 110, 20);

        jLabel6.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel6.setText("Sexo:");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(20, 50, 40, 20);

        TxtSexo.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        TxtSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Masculino", "Feminino" }));
        jPanel3.add(TxtSexo);
        TxtSexo.setBounds(60, 50, 160, 20);

        jLabel7.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel7.setText("CPF:");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(25, 80, 30, 20);

        try {
            TxtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel3.add(TxtCPF);
        TxtCPF.setBounds(60, 80, 160, 20);

        jLabel8.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel8.setText("Telefone:");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(270, 80, 60, 20);

        try {
            TxtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel3.add(TxtTelefone);
        TxtTelefone.setBounds(330, 80, 110, 20);

        jLabel9.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel9.setText("Celular:");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(490, 80, 50, 20);

        try {
            TxtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel3.add(TxtCelular);
        TxtCelular.setBounds(540, 80, 160, 20);

        jLabel10.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel10.setText("E-mail:");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 110, 50, 20);
        jPanel3.add(TxtEmail);
        TxtEmail.setBounds(60, 110, 380, 20);

        jLabel4.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel4.setText("Estado Civil:");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(460, 50, 80, 20);

        TxtEstadocivil.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        TxtEstadocivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Casado(a)", "Solteiro(a)", "Namorando", "Viuvo(a)" }));
        TxtEstadocivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtEstadocivilActionPerformed(evt);
            }
        });
        jPanel3.add(TxtEstadocivil);
        TxtEstadocivil.setBounds(540, 50, 160, 20);

        jLabel1.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel1.setText("     Matrícula:");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(460, 110, 80, 20);
        jPanel3.add(TxtMatricula);
        TxtMatricula.setBounds(540, 110, 160, 20);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(10, 40, 710, 140);

        jPanel4.setBackground(new java.awt.Color(28, 203, 248));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Endereço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Small", 1, 11))); // NOI18N
        jPanel4.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel11.setText("Bairro:");
        jPanel4.add(jLabel11);
        jLabel11.setBounds(10, 20, 38, 20);
        jPanel4.add(TxtBairro);
        TxtBairro.setBounds(60, 20, 640, 20);

        jLabel12.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel12.setText(" Rua:");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(20, 50, 40, 20);
        jPanel4.add(TxtRua);
        TxtRua.setBounds(60, 50, 420, 20);

        jLabel13.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel13.setText("Número:");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(510, 50, 50, 20);
        jPanel4.add(TxtNumero);
        TxtNumero.setBounds(570, 50, 130, 20);

        jLabel14.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel14.setText("Cidade:");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(10, 110, 50, 20);
        jPanel4.add(TxtCidade);
        TxtCidade.setBounds(60, 110, 190, 20);

        jLabel16.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel16.setText("Estado:");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(280, 110, 50, 20);
        jPanel4.add(TxtEstado);
        TxtEstado.setBounds(330, 110, 150, 20);

        TxtComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtComplementoActionPerformed(evt);
            }
        });
        jPanel4.add(TxtComplemento);
        TxtComplemento.setBounds(60, 80, 420, 20);

        jLabel17.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel17.setText("  Comple:");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(0, 80, 80, 20);

        jLabel15.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel15.setText("     CEP:");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(520, 80, 50, 20);

        try {
            TxtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel4.add(TxtCep);
        TxtCep.setBounds(570, 80, 130, 20);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(10, 190, 710, 150);

        jPanel5.setBackground(new java.awt.Color(28, 203, 248));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Profissionais", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Small", 1, 11))); // NOI18N
        jPanel5.setLayout(null);

        jLabel18.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel18.setText("Escolaridade:");
        jPanel5.add(jLabel18);
        jLabel18.setBounds(10, 20, 80, 20);
        jPanel5.add(TxtEscolaridade);
        TxtEscolaridade.setBounds(100, 20, 130, 20);

        jLabel19.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel19.setText(" RG:");
        jPanel5.add(jLabel19);
        jLabel19.setBounds(250, 20, 30, 20);
        jPanel5.add(TxtRG);
        TxtRG.setBounds(280, 20, 140, 20);

        jLabel20.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel20.setText("Data de Admissão:");
        jPanel5.add(jLabel20);
        jLabel20.setBounds(430, 20, 110, 20);

        try {
            TxtDatademissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel5.add(TxtDatademissao);
        TxtDatademissao.setBounds(540, 50, 160, 20);

        jLabel21.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel21.setText("Sal. Admissão:");
        jPanel5.add(jLabel21);
        jLabel21.setBounds(10, 50, 90, 20);
        jPanel5.add(TxtSalarioatual);
        TxtSalarioatual.setBounds(100, 80, 130, 20);

        jLabel22.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel22.setText("Data de Demissão:");
        jPanel5.add(jLabel22);
        jLabel22.setBounds(430, 50, 110, 20);

        try {
            TxtDataadmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel5.add(TxtDataadmissao);
        TxtDataadmissao.setBounds(540, 20, 160, 20);

        jLabel23.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel23.setText("Salário Atual:");
        jPanel5.add(jLabel23);
        jLabel23.setBounds(10, 80, 80, 20);
        jPanel5.add(TxtSalarioadmissao);
        TxtSalarioadmissao.setBounds(100, 50, 130, 20);

        jLabel24.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel24.setText("Cargo:");
        jPanel5.add(jLabel24);
        jLabel24.setBounds(240, 80, 36, 20);

        jLabel25.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel25.setText("    Status:");
        jPanel5.add(jLabel25);
        jLabel25.setBounds(480, 80, 60, 20);

        TxtStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Ativo", "Inativo" }));
        jPanel5.add(TxtStatus);
        TxtStatus.setBounds(540, 80, 160, 20);

        TxtCargo.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        TxtCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Gerente", "Administrador", "Operador", " " }));
        jPanel5.add(TxtCargo);
        TxtCargo.setBounds(280, 80, 140, 20);

        jPanel2.add(jPanel5);
        jPanel5.setBounds(10, 350, 710, 120);
        jPanel2.add(TxtID);
        TxtID.setBounds(70, 10, 130, 20);

        jLabel26.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jLabel26.setText("ID:");
        jPanel2.add(jLabel26);
        jLabel26.setBounds(50, 10, 16, 20);

        Btn_Pesquisar.setText("Pesquisar");
        Btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_PesquisarActionPerformed(evt);
            }
        });
        jPanel2.add(Btn_Pesquisar);
        Btn_Pesquisar.setBounds(210, 0, 120, 40);

        Btn_Novo.setText("Novo");
        Btn_Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_NovoActionPerformed(evt);
            }
        });
        jPanel2.add(Btn_Novo);
        Btn_Novo.setBounds(910, 30, 110, 40);

        jPanel6.setBackground(new java.awt.Color(82, 203, 246));

        Btn_Alterar.setText("Alterar");
        Btn_Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AlterarActionPerformed(evt);
            }
        });

        Btn_Limpar.setText("Limpar");
        Btn_Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LimparActionPerformed(evt);
            }
        });

        Btn_Excluir.setText("Excluir");
        Btn_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Btn_Alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Btn_Limpar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(Btn_Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel2.add(jPanel6);
        jPanel6.setBounds(750, 230, 280, 190);

        Btn_Cancelar.setText("Cancelar");
        Btn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_CancelarActionPerformed(evt);
            }
        });
        jPanel2.add(Btn_Cancelar);
        Btn_Cancelar.setBounds(750, 30, 110, 40);

        Btn_Salvar.setText("Salvar");
        Btn_Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_SalvarActionPerformed(evt);
            }
        });
        jPanel2.add(Btn_Salvar);
        Btn_Salvar.setBounds(840, 520, 140, 50);

        Tabela_Funcionario.setBackground(new java.awt.Color(62, 203, 246));
        Tabela_Funcionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Matricula", "Nome", "Celular", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabela_Funcionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabela_FuncionarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabela_Funcionario);
        if (Tabela_Funcionario.getColumnModel().getColumnCount() > 0) {
            Tabela_Funcionario.getColumnModel().getColumn(0).setResizable(false);
            Tabela_Funcionario.getColumnModel().getColumn(1).setResizable(false);
            Tabela_Funcionario.getColumnModel().getColumn(2).setResizable(false);
            Tabela_Funcionario.getColumnModel().getColumn(3).setResizable(false);
            Tabela_Funcionario.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 480, 710, 120);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 1050, 610);

        setBounds(0, 0, 1058, 647);
    }// </editor-fold>//GEN-END:initComponents

    public void Limpar()
    {
        TxtID.setText(""); 
        TxtMatricula.setText("");
        TxtNome.setText("");
        TxtEstadocivil.setSelectedItem("Selecionar");
        TxtDatanascimento.setText("");
        TxtSexo.setSelectedItem("Selecionar");
        TxtCPF.setText("");
        TxtTelefone.setText("");
        TxtCelular.setText("");
        TxtEmail.setText("");
        TxtBairro.setText("");
        TxtRua.setText("");
        TxtNumero.setText("");
        TxtCidade.setText("");
        TxtCep.setText("");
        TxtEstado.setText("");
        TxtComplemento.setText("");
        TxtEscolaridade.setText("");
        TxtRG.setText("");
        TxtDataadmissao.setText("");
        TxtSalarioadmissao.setText("");
        TxtDatademissao.setText("");
        TxtSalarioatual.setText("");
        TxtCargo.setSelectedItem("Selecionar");
        TxtStatus.setSelectedItem("Selecionar");  
    }
 public void Campos(boolean Id, boolean Mat, boolean Nom, boolean Estc, boolean Dtnasc, boolean Sex, boolean Cpf, boolean Tel, boolean Cel, boolean Emai,boolean Bair, boolean Rua, boolean Num,
         boolean Cid, boolean Cep, boolean Est, boolean Comp, boolean Esco, boolean Rg, boolean Dtad, boolean Salad, boolean Dtdem, boolean Salat, boolean Carg, boolean Stat )
    {
      
        TxtID.setEnabled(Id);
        TxtMatricula.setEnabled(Mat);
        TxtNome.setEnabled(Nom);
        TxtEstadocivil.setEnabled(Estc);
        TxtDatanascimento.setEnabled(Dtnasc);
        TxtSexo.setEnabled(Sex);
        TxtCPF.setEnabled(Cpf);
        TxtTelefone.setEnabled(Tel);
        TxtCelular.setEnabled(Cel);
        TxtEmail.setEnabled(Emai);
        TxtBairro.setEnabled(Bair);
        TxtRua.setEnabled(Rua);
        TxtNumero.setEnabled(Num);
        TxtCidade.setEnabled(Cid);
        TxtCep.setEnabled(Cep);
        TxtEstado.setEnabled(Est);
        TxtComplemento.setEnabled(Comp);
        TxtEscolaridade.setEnabled(Esco);
        TxtRG.setEnabled(Rg);
        TxtDataadmissao.setEnabled(Dtad);
        TxtSalarioadmissao.setEnabled(Salad);
        TxtDatademissao.setEnabled(Dtdem);
        TxtSalarioatual.setEnabled(Salat);
        TxtCargo.setEnabled(Carg);
        TxtStatus.setEnabled(Stat);
    }
 
 public void Campos_Botão( boolean BtNov,boolean BtLim,boolean BtAlt, boolean BtExc, boolean BtSal, boolean BtPesq, boolean BtCanc)
    {
       
       Btn_Novo.setEnabled(BtNov);
       Btn_Limpar.setEnabled(BtLim);
       Btn_Alterar.setEnabled(BtAlt);
       Btn_Excluir.setEnabled(BtExc);
       Btn_Salvar.setEnabled(BtSal);
       Btn_Pesquisar.setEnabled(BtPesq);
       Btn_Cancelar.setEnabled(BtCanc);
    }
 
    
    private void TxtEstadocivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtEstadocivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtEstadocivilActionPerformed

    private void Btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_PesquisarActionPerformed
        String ID = JOptionPane.showInputDialog("Digite o ID do Funcionario: ");
        funcionario = new Funcionario_Model();
  
        try {
            funcionario = funci_Dao.getFuncionarioById(Integer.parseInt(ID));
        } catch (SQLException ex) {
            Logger.getLogger(Funcionario_View.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    if(funcionario == null)
    {
         JOptionPane.showMessageDialog(null, "Funcionario não encontrado");
    }
               Campos(false, true, true, true, true, true, true, true, true, true, true, true, true, true, true,
                      true,true, true, true, true, true, true, true, true, true);          
               Campos_Botão(false, true, true, true, false, false,true);
            
                TxtID.setText(ID);
                TxtMatricula.setText(funcionario.getMatricula());
                TxtNome.setText(funcionario.getMatricula());
                TxtEstadocivil.setSelectedItem(funcionario.getEstadocivil());
                TxtDatanascimento.setText(sdf.format(funcionario.getDatanascimento()));
                TxtSexo.setSelectedItem(funcionario.getSexo());
                TxtCPF.setText(funcionario.getCPF());
                TxtTelefone.setText(funcionario.getTelefone());
                TxtCelular.setText(funcionario.getCelular());
                TxtEmail.setText(funcionario.getEmail());
                TxtBairro.setText(funcionario.getBairro());
                TxtRua.setText(funcionario.getRua());
                TxtNumero.setText(Integer.toString(funcionario.getNumero()));
                TxtCidade.setText(funcionario.getCidade());
                TxtCep.setText(funcionario.getCep());
                TxtEstado.setText(funcionario.getEstado());
                TxtComplemento.setText(funcionario.getComplemento());
                TxtEscolaridade.setText(funcionario.getEscolaridade());
                TxtRG.setText(funcionario.getRG());
                TxtDataadmissao.setText(sdf.format(funcionario.getDataadmissao()));
                TxtSalarioadmissao.setText(funcionario.getSalarioadmissao());
                TxtDatademissao.setText(sdf.format(funcionario.getDatademissao()));
                TxtSalarioatual.setText(funcionario.getSalarioatual());
                TxtCargo.setSelectedItem(funcionario.getCargo());
                TxtStatus.setSelectedItem(funcionario.getStatus());
               
                user = funcionario.getNome();
    }//GEN-LAST:event_Btn_PesquisarActionPerformed

    private void TxtComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtComplementoActionPerformed

    private void Btn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_CancelarActionPerformed
        Campos(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
                false,false, false, false, false, false, false, false, false,false);

        Campos_Botão(true, false, false, false, false,true,false);
        Limpar();
    }//GEN-LAST:event_Btn_CancelarActionPerformed

    private void Btn_NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_NovoActionPerformed
        Campos(false, true, true, true, true, true, true, true, true, true, true, true, true, true, true,
                true,true, true, true, true, true, true, true, true, true);
        Campos_Botão(false, false, false, false, true, false, true);
        Limpar();
    }//GEN-LAST:event_Btn_NovoActionPerformed

    private void Btn_AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AlterarActionPerformed
        try {
             if (TxtMatricula.getText().isEmpty() || TxtNome.getText().isEmpty() || TxtEstadocivil.getSelectedItem().equals("Selecionar") || TxtDatanascimento.getText().isEmpty() || TxtSexo.getSelectedItem().equals("Selecionar") || TxtCPF.getText().isEmpty() ||
                     TxtTelefone.getText().isEmpty() || TxtCelular.getText().isEmpty() || TxtEmail.getText().isEmpty() || TxtBairro.getText().isEmpty() || TxtNumero.getText().isEmpty() || TxtRua.getText().isEmpty() || TxtCidade.getText().isEmpty() ||
                     TxtCep.getText().isEmpty() || TxtEstado.getText().isEmpty() || TxtComplemento.getText().isEmpty() || TxtEscolaridade.getText().isEmpty() ||  TxtRG.getText().isEmpty() || TxtDataadmissao.getText().isEmpty() ||
                     TxtSalarioadmissao.getText().isEmpty() || TxtDatademissao.getText().isEmpty() || TxtSalarioatual.getText().isEmpty() || TxtCargo.getSelectedItem().equals("Selecionar") || TxtStatus.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "Preencha todos os campos");
            TxtNome.requestFocusInWindow();
                } 
             else {
                if (new ValidaCPF().validaCPF(TxtCPF.getText()) == false) {
                    JOptionPane.showMessageDialog(null, "O CPF digitado é Inválido");
                } else {
                    if (sdf.parse(TxtDatanascimento.getText()).equals(new java.util.Date()) || sdf.parse(TxtDatanascimento.getText()).after(new java.util.Date())) {
                        JOptionPane.showMessageDialog(null, "A data de nascimento não pode ser igual ou depois da data de hoje");
                    } else {
                        cpf2 = funci_Dao.validarCpfFuncionario(TxtCPF.getText());
                        if (!cpf.equals(TxtCPF.getText()) && cpf2.equals(TxtCPF.getText())) {
                            JOptionPane.showMessageDialog(null, "O CPF já possui um funcionario cadastrado");
                        } else {
                            user2 = funci_Dao.validarNomeUsuario(TxtNome.getText());
                            if (!user.equals(TxtNome.getText()) && user2.equals(TxtNome.getText())) {
                                JOptionPane.showMessageDialog(null, "Já existe um funcionario com este nome");
                            }
             
             else {
                            user2 = funci_Dao.validarNomeUsuario(TxtNome.getText());
                            if (!user.equals(TxtNome.getText()) && user2.equals(TxtNome.getText())) {
                                JOptionPane.showMessageDialog(null, "Já existe um funcionario com este nome");
                            }  else {
                                
                                funcionario = new Funcionario_Model();
                                
                                funcionario.setID(Integer.parseInt(TxtID.getText()));
                                funcionario.setMatricula(TxtMatricula.getText());
                                funcionario.setNome(TxtNome.getText());
                                funcionario.setEstadocivil(String.valueOf(TxtEstadocivil.getSelectedItem()));
                                funcionario.setDatanascimento((Date) sdf.parse(TxtDatanascimento.getText()));
                                funcionario.setSexo(String.valueOf(TxtSexo.getSelectedItem()));
                                funcionario.setCPF(TxtCPF.getText());
                                funcionario.setTelefone(TxtTelefone.getText());
                                funcionario.setCelular(TxtCelular.getText());
                                funcionario.setEmail(TxtEmail.getText());
                                funcionario.setBairro(TxtBairro.getText());
                                funcionario.setRua(TxtRua.getText());
                                funcionario.setNumero(Integer.parseInt(TxtNumero.getText()));
                                funcionario.setCidade(TxtCidade.getText());
                                funcionario.setCep(TxtCep.getText());
                                funcionario.setEstado(TxtEstado.getText());
                                funcionario.setComplemento(TxtComplemento.getText());
                                funcionario.setEscolaridade(TxtEscolaridade.getText());
                                funcionario.setRG(TxtRG.getText());
                                funcionario.setDataadmissao((Date) sdf.parse(TxtDataadmissao.getText()));
                                funcionario.setSalarioadmissao(TxtSalarioadmissao.getText());
                                funcionario.setDatademissao((Date) sdf.parse(TxtDatademissao.getText()));
                                funcionario.setSalarioatual(TxtSalarioatual.getText());
                                funcionario.setCargo(String.valueOf(TxtCargo.getSelectedItem()));
                                funcionario.setStatus(String.valueOf(TxtStatus.getSelectedItem()));

                                int i = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Alterar os Dados!");   
                                if( i == 0 )
                                { 
                                funci_Dao.alterar(funcionario);
                                
                                JOptionPane.showMessageDialog(null, "Alterado com sucesso");
                                atualizarTabela();
                                Limpar(); 
                                }
                            }
                        }
                      }
                    }
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "A data informada é inválida");
                 
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERRO!");
            ex.printStackTrace();

        }
    }//GEN-LAST:event_Btn_AlterarActionPerformed

    private void Btn_LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LimparActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Limpar os Dados!");       
               if( i == 0 )
                {
                    Limpar();
                    Campos(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
                false,false, false, false, false, false, false, false, false,false);

                    Campos_Botão(true, false, false, false, false, true,true);
                }
    }//GEN-LAST:event_Btn_LimparActionPerformed

    private void Btn_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ExcluirActionPerformed
        int i = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Excluir os Dados!");
            if( i == 0 )
            {
                 try 
                {  
                  funci_Dao.excluir(Integer.parseInt(TxtID.getText()));
                  atualizarTabela();
                  Limpar();
                  JOptionPane.showMessageDialog(null, "Removido com Sucesso"); 
                } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "ERRO!");
                        e.printStackTrace();
                    }
            }
    }//GEN-LAST:event_Btn_ExcluirActionPerformed

    private void Btn_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_SalvarActionPerformed
     try {
             if (TxtMatricula.getText().isEmpty() || TxtNome.getText().isEmpty() || TxtEstadocivil.getSelectedItem().equals("Selecionar") || TxtDatanascimento.getText().isEmpty() || TxtSexo.getSelectedItem().equals("Selecionar") || TxtCPF.getText().isEmpty() ||
                     TxtTelefone.getText().isEmpty() || TxtCelular.getText().isEmpty() || TxtEmail.getText().isEmpty() || TxtBairro.getText().isEmpty() || TxtNumero.getText().isEmpty() || TxtRua.getText().isEmpty() || TxtCidade.getText().isEmpty() ||
                     TxtCep.getText().isEmpty() || TxtEstado.getText().isEmpty() || TxtComplemento.getText().isEmpty() || TxtEscolaridade.getText().isEmpty() ||  TxtRG.getText().isEmpty() || TxtDataadmissao.getText().isEmpty() ||
                     TxtSalarioadmissao.getText().isEmpty() || TxtDatademissao.getText().isEmpty() || TxtSalarioatual.getText().isEmpty() || TxtCargo.getSelectedItem().equals("Selecionar") || TxtStatus.getSelectedItem().equals("Selecionar")){
                    
                 JOptionPane.showMessageDialog(null, "Preencha todos os campos");
                 TxtNome.requestFocusInWindow();
                } 
             else {
                if (new ValidaCPF().validaCPF(TxtCPF.getText()) == false) {
                    JOptionPane.showMessageDialog(null, "O CPF digitado é Inválido");
        } else {
                    if (sdf.parse(TxtDatanascimento.getText()).equals(new java.util.Date()) || sdf.parse(TxtDatanascimento.getText()).after(new java.util.Date())) {
                        JOptionPane.showMessageDialog(null, "A data de nascimento não pode ser igual ou depois da data de hoje");
                    } else {
                        cpf2 = funci_Dao.validarCpfFuncionario(TxtCPF.getText());
                        if (!cpf.equals(TxtCPF.getText()) && cpf2.equals(TxtCPF.getText())) {
                            JOptionPane.showMessageDialog(null, "O CPF já possui um funcionario cadastrado");
                        } else {
                            user2 = funci_Dao.validarNomeUsuario(TxtNome.getText());
                            if (!user.equals(TxtNome.getText()) && user2.equals(TxtNome.getText())) {
                                JOptionPane.showMessageDialog(null, "Já existe um funcionario com este nome");
                            }
             
                            else {
                            user2 = funci_Dao.validarNomeUsuario(TxtNome.getText());
                            if (!user.equals(TxtNome.getText()) && user2.equals(TxtNome.getText())) {
                                JOptionPane.showMessageDialog(null, "Já existe um funcionario com este nome");
                            } 
                            
                        else{
                                funcionario.setMatricula(TxtMatricula.getText());
                                
                                funcionario.setNome(TxtNome.getText());
                                funcionario.setEstadocivil(String.valueOf(TxtEstadocivil.getSelectedItem()));
                                funcionario.setDatanascimento((Date) sdf.parse(TxtDatanascimento.getText()));
                                //funcionario.setDatanascimento((Date) sdf.parse(TxtDatanascimento.getText()));
                                funcionario.setSexo(String.valueOf(TxtSexo.getSelectedItem()));
                                funcionario.setCPF(TxtCPF.getText());
                                funcionario.setTelefone(TxtTelefone.getText());
                                funcionario.setCelular(TxtCelular.getText());
                                funcionario.setEmail(TxtEmail.getText());
                                funcionario.setBairro(TxtBairro.getText());
                                funcionario.setRua(TxtRua.getText());
                                funcionario.setNumero(Integer.parseInt(TxtNumero.getText()));
                                funcionario.setCidade(TxtCidade.getText());
                                funcionario.setCep(TxtCep.getText());
                                funcionario.setEstado(TxtEstado.getText());
                                funcionario.setComplemento(TxtComplemento.getText());
                                funcionario.setEscolaridade(TxtEscolaridade.getText());
                                funcionario.setRG(TxtRG.getText());
                                funcionario.setDataadmissao((Date) sdf.parse(TxtDataadmissao.getText()));
                                funcionario.setSalarioadmissao(TxtSalarioadmissao.getText());
                                funcionario.setDatademissao((Date) sdf.parse(TxtDatademissao.getText()));
                                funcionario.setSalarioatual(TxtSalarioatual.getText());
                                funcionario.setCargo(String.valueOf(TxtCargo.getSelectedItem()));
                                funcionario.setStatus(String.valueOf(TxtStatus.getSelectedItem()));
                                try {
                                        funci_Dao.salvar(funcionario);
                                    } catch (SQLException ex) {
                                    Logger.getLogger(Cliente_View.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                
                                    JOptionPane.showMessageDialog(null, "Gravado com Sucesso");
                                    atualizarTabela();
                                    Campos(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
                                            false,false, false, false, false, false, false, false, false,false);
        
                                    Campos_Botão(true, false, false, false, false,true,false);
                            }                                   
                        }
                      }
                    }
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "A data informada é inválida");
                 
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERRO!");
            ex.printStackTrace();

        }
    }//GEN-LAST:event_Btn_SalvarActionPerformed

    private void Tabela_FuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabela_FuncionarioMouseClicked
        int i = 0;
        Tabela_Funcionario.getModel();
        TxtID.setText(modelo.getValueAt(Tabela_Funcionario.getSelectedRow(), 0).toString());
        try {
             Campos(false, true, true, true, true, true, true, true, true, true, true, true, true, true, true,
                true,true, true, true, true, true, true, true, true, true);        
             Campos_Botão(true, true, true, true, false, true,true);
            
             funcionario = funci_Dao.getFuncionarioById(Integer.parseInt(TxtID.getText()));
            
            TxtMatricula.setText(funcionario.getMatricula());
                TxtNome.setText(funcionario.getMatricula());
                TxtEstadocivil.setSelectedItem(funcionario.getEstadocivil());
                TxtDatanascimento.setText(sdf.format(funcionario.getDatanascimento()));
                TxtSexo.setSelectedItem(funcionario.getSexo());
                TxtCPF.setText(funcionario.getCPF());
                TxtTelefone.setText(funcionario.getTelefone());
                TxtCelular.setText(funcionario.getCelular());
                TxtEmail.setText(funcionario.getEmail());
                TxtBairro.setText(funcionario.getBairro());
                TxtRua.setText(funcionario.getRua());
                TxtNumero.setText(Integer.toString(funcionario.getNumero()));
                TxtCidade.setText(funcionario.getCidade());
                TxtCep.setText(funcionario.getCep());
                TxtEstado.setText(funcionario.getEstado());
                TxtComplemento.setText(funcionario.getComplemento());
                TxtEscolaridade.setText(funcionario.getEscolaridade());
                TxtRG.setText(funcionario.getRG());
                TxtDataadmissao.setText(sdf.format(funcionario.getDataadmissao()));
                TxtSalarioadmissao.setText(funcionario.getSalarioadmissao());
                TxtDatademissao.setText(sdf.format(funcionario.getDatademissao()));
                TxtSalarioatual.setText(funcionario.getSalarioatual());
                TxtCargo.setSelectedItem(funcionario.getCargo());
                TxtStatus.setSelectedItem(funcionario.getStatus());
                cpf = funcionario.getCPF();
                user = funcionario.getNome();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_Tabela_FuncionarioMouseClicked


    public void atualizarTabela() {
        funcionario = new Funcionario_Model();
        try {
            funcionarios = funci_Dao.todosFuncionarios();
            String dados[][] = new String[funcionarios.size()][5];
            int i = 0;
            for (Funcionario_Model u : funcionarios) {
                dados[i][0] = String.valueOf(u.getID());
                dados[i][1] = u.getMatricula();
                dados[i][2] = u.getNome();
                dados[i][3] = u.getCelular();
                dados[i][4] = u.getEmail(); 
                i++;
            }
            String tituloColuna[] = {"ID", "Matricula", "Nome", "Celular", "Email"};
            modelo.setDataVector(dados, tituloColuna);
            Tabela_Funcionario.setModel(modelo);
            Tabela_Funcionario.updateUI();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }    
    }
    
   public int validarAltCpf() {
        int vc = 0;
        if (cpf2.equals(TxtCPF.getText())) {

            vc = 0;
        } else {
            vc = 1;
        }
        return vc;
    }

    public int validarAltUsu() {
        int vc = 0;
        if (user2.equals(TxtNome.getText())) {
            JOptionPane.showMessageDialog(null, "Já existe um funcionario com este nome");
        } else {
            vc = 1;
        }
        return vc;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Alterar;
    private javax.swing.JButton Btn_Cancelar;
    private javax.swing.JButton Btn_Excluir;
    private javax.swing.JButton Btn_Limpar;
    private javax.swing.JButton Btn_Novo;
    private javax.swing.JButton Btn_Pesquisar;
    private javax.swing.JButton Btn_Salvar;
    private javax.swing.JTable Tabela_Funcionario;
    private javax.swing.JTextField TxtBairro;
    private javax.swing.JFormattedTextField TxtCPF;
    private javax.swing.JComboBox<String> TxtCargo;
    private javax.swing.JFormattedTextField TxtCelular;
    private javax.swing.JFormattedTextField TxtCep;
    private javax.swing.JTextField TxtCidade;
    private javax.swing.JTextField TxtComplemento;
    private javax.swing.JFormattedTextField TxtDataadmissao;
    private javax.swing.JFormattedTextField TxtDatademissao;
    private javax.swing.JFormattedTextField TxtDatanascimento;
    private javax.swing.JTextField TxtEmail;
    private javax.swing.JTextField TxtEscolaridade;
    private javax.swing.JTextField TxtEstado;
    private javax.swing.JComboBox<String> TxtEstadocivil;
    private javax.swing.JTextField TxtID;
    private javax.swing.JTextField TxtMatricula;
    private javax.swing.JTextField TxtNome;
    private javax.swing.JTextField TxtNumero;
    private javax.swing.JTextField TxtRG;
    private javax.swing.JTextField TxtRua;
    private javax.swing.JTextField TxtSalarioadmissao;
    private javax.swing.JTextField TxtSalarioatual;
    private javax.swing.JComboBox<String> TxtSexo;
    private javax.swing.JComboBox<String> TxtStatus;
    private javax.swing.JFormattedTextField TxtTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
